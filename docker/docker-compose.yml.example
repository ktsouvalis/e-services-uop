services:
  database:
    image: mariadb:11.4
    container_name: dgu-db2
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3308:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-uroot", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 10

  application:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: app
    image: dgu-services:latest
    container_name: dgu-app2
    restart: always
    environment:
      BOOTSTRAP: "1"
    volumes:
      - ../.env:/var/www/html/dgu-services/.env:ro
      - storage:/var/www/html/dgu-services/storage
      - assets_build:/var/www/html/dgu-services/public/build
    ports:
      - "8001:80"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/health || curl -fsS http://localhost || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  queue-worker:
    image: dgu-services:latest
    container_name: dgu-q2
    command: bash -lc "php artisan queue:work --verbose --tries=3 --timeout=90"
    restart: always
    volumes:
      - ../.env:/var/www/html/dgu-services/.env:ro
      - storage:/var/www/html/dgu-services/storage
    depends_on:
      application:
        condition: service_healthy
      database:
        condition: service_healthy

  reverb-server:
    image: dgu-services:latest
    container_name: dgu-ws2
    command: bash -lc "php artisan reverb:start --host=0.0.0.0 --port=8080"
    restart: always
    volumes:
      - ../.env:/var/www/html/dgu-services/.env:ro
      - storage:/var/www/html/dgu-services/storage
    ports:
      - "8081:8080"
    depends_on:
      application:
        condition: service_healthy

  assets:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: assets-builder
    image: dgu-services-assets
    container_name: dgu-assets2
    command: sh -c "npm run build"
    restart: "no"
    volumes:
      - ../.env:/var/www/html/dgu-services/.env:ro
      - assets_build:/var/www/html/dgu-services/public/build
volumes:
  db_data:
  storage:
  assets_build: